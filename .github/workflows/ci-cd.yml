name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        qt-version: ['6.5.0', '6.6.0']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🛠️ Setup Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}
        modules: qtbase, qttools, qtdeclarative
        
    - name: 🔧 Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev
        
    - name: 🏗️ Build Application
      run: |
        cd app
        chmod +x build.sh
        ./build.sh
        
    - name: 🧪 Run Tests
      run: |
        cd app/build
        make test || echo "No tests available yet"
        
    - name: 📦 Create AppImage
      run: |
        cd executables
        chmod +x build_appimage.sh
        ./build_appimage.sh || echo "AppImage build failed"
        
    - name: 📤 Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-build-${{ matrix.qt-version }}
        path: |
          app/build/RunMyModelDesktop
          executables/*.AppImage
        retention-days: 7

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🛠️ Setup Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
        modules: qtbase, qttools, qtdeclarative
        
    - name: 🔧 Setup Build Environment
      run: |
        # Install Visual Studio Build Tools
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
        
    - name: 🏗️ Build Application
      run: |
        cd app
        .\build.bat || echo "Windows build script not available"
        
    - name: 📦 Create Windows Package
      run: |
        cd executables
        .\build_msi.sh || echo "MSI build script not available"
        
    - name: 📤 Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: |
          app/build/RunMyModelDesktop.exe
          executables/*.msi
          executables/*.exe
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Lint Code
      run: |
        # Install clang-format
        sudo apt-get install -y clang-format
        
        # Check code formatting
        find app/src-cpp -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror || echo "Code formatting issues found"
        
    - name: 🛡️ Security Scan
      run: |
        # Basic security checks
        echo "Running security checks..."
        # Add security scanning tools here
        
    - name: 📊 Code Coverage
      run: |
        echo "Code coverage analysis would go here"
        # Add coverage tools here

  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build-linux, build-windows, code-quality]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
        
    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/linux-build-6.5.0/RunMyModelDesktop
          artifacts/linux-build-6.5.0/*.AppImage
          artifacts/windows-build/*.exe
          artifacts/windows-build/*.msi
        generate_release_notes: true
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
